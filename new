import React from 'react';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import Typography from '@mui/material/Typography';

const BondCard = ({ bond }) => {
  return (
    <Card sx={{ minWidth: 275 }}>
      <CardContent>
        <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
          {bond.issuerName}
        </Typography>
        <Typography variant="h5" component="div">
          ISIN: {bond.isin}
        </Typography>
        <Typography sx={{ mb: 1.5 }} color="text.secondary">
          Type: {bond.type}
        </Typography>
        <Typography variant="body2">
          Maturity Date: {bond.maturityDate}
        </Typography>
      </CardContent>
    </Card>
  );
};

export default BondCard;


import React, { useState } from 'react';
import dayjs from 'dayjs';
import { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';
import './Maturity.css';
import BondCard from './BondCard'; // Import the BondCard component

const bondsData = [
  // Your bonds data...
];

function Maturity() {
  const [selectedDate, setSelectedDate] = useState(dayjs('2021-08-09'));

  const handleDateChange = (newDate) => {
    setSelectedDate(newDate);
  };

  return (
    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <DemoContainer components={['DateCalendar', 'DateCalendar']}>
        <DemoItem label="Choose date">
          <DateCalendar value={selectedDate} onChange={handleDateChange} />
        </DemoItem>
      </DemoContainer>

      <div>
        {[...Array(11)].map((_, index) => {
          const currentDate = selectedDate.subtract(5, 'day').add(index, 'day');
          const filteredBonds = bondsData.filter((bond) =>
            dayjs(bond.maturityDate).isSame(currentDate, 'day')
          );

          return (
            <div
              key={currentDate.format('YYYY-MM-DD')}
              className="bond-container"
            >
              <h2>{currentDate.format('YYYY-MM-DD')}</h2>
              {filteredBonds.length === 0 ? (
                <p>No bonds existing for this day.</p>
              ) : (
                filteredBonds.map((bond) => (
                  <BondCard key={bond.isin} bond={bond} />
                ))
              )}
            </div>
          );
        })}
      </div>
    </LocalizationProvider>
  );
}

export default Maturity;
