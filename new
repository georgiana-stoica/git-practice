// ... (import statements and other code)

const Maturity = () => {
    const [selectedDate, setSelectedDate] = useState(dayjs('2021-08-12'));
    const [bondsData, setBondsData] = useState([]);

    useEffect(() => {
        getMaturity();
    }, []);

    const getMaturity = () => {
        getBondsByMaturity()
            .then(res => {
                setBondsData(res.data);
            })
            .catch(err => {
                setBondsData([]);
                console.log(err);
            });
    };

    const handleDateChange = (newDate) => {
        setSelectedDate(newDate);
    };

    return (
        <LocalizationProvider dateAdapter={AdapterDayjs}>
            {/* ... (DateCalendar component) */}

            <div className="bond-list">
                {[...Array(11)].map((_, index) => {
                    const currentDate = selectedDate.subtract(5, 'day').add(index, 'day');
                    const filteredBonds = bondsData.filter(bond =>
                        // Compare Date objects
                        new Date(bond.maturityDate).toDateString() === currentDate.toDate().toDateString()
                    );

                    return (
                        <div key={currentDate.format('YYYY-MM-DD')} className="bond-container">
                            <div className="bond-header">{currentDate.format('YYYY-MM-DD')}</div>
                            <div className="bond-body">
                                {filteredBonds.length === 0 ? (
                                    <p>No bonds existing for this day.</p>
                                ) : (
                                    filteredBonds.map(bond => (
                                        <div key={bond.isin} className="bond-box">
                                            <p>{bond.isin}</p>
                                            <p>{bond.details}</p>
                                        </div>
                                    ))
                                )}
                            </div>
                        </div>
                    );
                })}
            </div>
        </LocalizationProvider>
    );
};

export default Maturity;
