import * as React from 'react';
import dayjs, { Dayjs } from 'dayjs';
import { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';

// Exemplu de date pentru obligațiuni
const bondsData = [
  { date: '2022-04-15', details: 'Detalii obligațiune 1' },
  { date: '2022-04-17', details: 'Detalii obligațiune 2' },
  { date: '2022-04-20', details: 'Detalii obligațiune 3' },
  // ... mai multe obiecte
];

export default function DateCalendarValue() {
  const [selectedDate, setSelectedDate] = React.useState<Dayjs | null>(dayjs('2022-04-17'));

  const handleDateChange = (newDate: Dayjs | null) => {
    setSelectedDate(newDate);
  };

  // Filtrăm obligațiunile pentru a obține cele corespunzătoare datei selectate și celor dinainte și după
  const filteredBonds = bondsData.filter(bond =>
    selectedDate && Math.abs(dayjs(bond.date).diff(selectedDate, 'days')) <= 5
  );

  return (
    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <DemoContainer components={['DateCalendar', 'DateCalendar']}>
        <DemoItem label="Controlled calendar">
          <DateCalendar value={selectedDate} onChange={handleDateChange} />
        </DemoItem>
      </DemoContainer>

      <div>
        {filteredBonds.map(bond => (
          <div key={bond.date}>
            <h2>{dayjs(bond.date).format('YYYY-MM-DD')}</h2>
            <p>{bond.details}</p>
          </div>
        ))}
      </div>
    </LocalizationProvider>
  );
}
